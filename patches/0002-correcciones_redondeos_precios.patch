diff --git a/addons/account/account.py b/addons/account/account.py
index 2bae5c5..efb32ee 100644
--- a/addons/account/account.py
+++ b/addons/account/account.py
@@ -2114,7 +2114,7 @@ class account_tax(osv.osv):
         tax_compute_precision = precision
         if taxes and taxes[0].company_id.tax_calculation_rounding_method == 'round_globally':
             tax_compute_precision += 5
-        totalin = totalex = round(price_unit * quantity, precision)
+        totalin = totalex = round(price_unit * quantity, tax_compute_precision)
         tin = []
         tex = []
         for tax in taxes:
diff --git a/addons/sale/sale.py b/addons/sale/sale.py
index 405a83c..62f84db 100644
--- a/addons/sale/sale.py
+++ b/addons/sale/sale.py
@@ -76,7 +76,7 @@ class sale_order(osv.osv):
                 val += self._amount_line_tax(cr, uid, line, context=context)
             res[order.id]['amount_tax'] = cur_obj.round(cr, uid, cur, val)
             res[order.id]['amount_untaxed'] = cur_obj.round(cr, uid, cur, val1)
-            res[order.id]['amount_total'] = res[order.id]['amount_untaxed'] + res[order.id]['amount_tax']
+            res[order.id]['amount_total'] = cur_obj.round(cr, uid, cur, val+val1)
         return res
 

@@ -878,7 +878,7 @@ class sale_order_line(osv.osv):
                                         line.product_id,
                                         line.order_id.partner_id)
             cur = line.order_id.pricelist_id.currency_id
-            res[line.id] = cur_obj.round(cr, uid, cur, taxes['total'])
+            res[line.id] = taxes['total']
         return res
 
     def _get_uom_id(self, cr, uid, *args):
@@ -923,7 +923,7 @@ class sale_order_line(osv.osv):
                 'sale.order.line': (lambda self,cr,uid,ids,ctx=None: ids, ['invoice_lines'], 10)
             }),
         'price_unit': fields.float('Unit Price', required=True, digits_compute= dp.get_precision('Product Price'), readonly=True, states={'draft': [('readonly', False)]}),
-        'price_subtotal': fields.function(_amount_line, string='Subtotal', digits_compute= dp.get_precision('Account')),
+        'price_subtotal': fields.function(_amount_line, string='Subtotal', digits_compute= dp.get_precision('Product Price')),
         'price_reduce': fields.function(_get_price_reduce, type='float', string='Price Reduce', digits_compute=dp.get_precision('Product Price')),
         'tax_id': fields.many2many('account.tax', 'sale_order_tax', 'order_line_id', 'tax_id', 'Taxes', readonly=True, states={'draft': [('readonly', False)]}, domain=['|', ('active', '=', False), ('active', '=', True)]),
         'address_allotment_id': fields.many2one('res.partner', 'Allotment Partner',help="A partner to whom the particular product needs to be allotted."),
